syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package proto.gymnasium.v1.models;

// Models service definitions.
service Models {
    // Create Model definition.
    rpc CreateModel(CreateModelRequest) returns (Model);

    // Find a model associated with some Project.
    rpc FindProjectModel(FindProjectModelRequest) returns (Model);

    // Find a model with it's attributes and associations within a context of some Project.
    rpc FindProjectModelOverview(FindProjectModelOverviewRequest) returns (ModelOverview);

    // List Project's models with all attributes and associations.
    rpc ListProjectModelOverviews(ListProjectModelOverviewsRequest) returns (ListProjectModelOverviewsResponse);

    // List models associated to some particular Project.
    rpc ListProjectModels(ListProjectModelsRequest) returns (ListProjectModelsResponse);

    // Delete a Model.
    rpc DeleteModel(DeleteModelRequest) returns (google.protobuf.Empty);

    // Create Model association.
    rpc CreateAssociation(CreateAssociationRequest) returns (Association);

    // Find Project's Model's association.
    rpc FindProjectModelAssociation(FindProjectModelAssociationRequest) returns (Association);

    // List Project's Model's associations.
    rpc ListProjectModelAssociations(ListProjectModelAssociationsRequest) returns (ListProjectModelAssociationsResponse);

    // Delete Models association.
    rpc DeleteAssociation(DeleteAssociationRequest) returns (google.protobuf.Empty);

    // Create Model attribute.
    rpc CreateAttribute(CreateAttributeRequest) returns (Attribute);

    // Find Project's Model's attribute.
    rpc FindProjectModelAttribute(FindProjectModelAttributeRequest) returns (Attribute);

    // List Project's Model's attributes.
    rpc ListProjectModelAttributes(ListProjectModelAttributesRequest) returns (ListProjectModelAttributesResponse);

    // Delete Models attribute.
    rpc DeleteAttribute(DeleteAttributeRequest) returns (google.protobuf.Empty);
}

// Representation of the Model.
message Model {
    // Unique identifier for the Model. Text representation of the UUID.
    string id = 1;

    // Unique identifier for the Project to which Model belongs. Text representation of the UUID.
    string project_id = 2;

    // The description of the Model.
    string description = 3;

    // The name of the Model.
    string name = 4;

    // The slug of the Model. Unique identifier for the Model's web address.
    string slug = 5;

    // The creation time of the Model.
    google.protobuf.Timestamp create_time = 6;

    // The timestamp of the last Model's update.
    google.protobuf.Timestamp update_time = 7;
}

// Representation of the Models association.
message Association {
    // Unique identifier for the Association. Text representation of the UUID.
    string id = 1;

    // Unique identifier for the Model to which Association belongs. Text representation of the UUID.
    string model_id = 2;

    // Associated model.
    Model associated_model = 3;

    // The description of the Association.
    string description = 4;

    // The kind of the Association.
    AssociationKind kind = 5;

    // The name of the Association.
    string name = 6;

    // The creation time of the Association.
    google.protobuf.Timestamp create_time = 7;

    // The timestamp of the last Association's update.
    google.protobuf.Timestamp update_time = 8;
}

// Representation of the Model's attribute.
message Attribute {
    // Unique identifier for the attribute. Text representation of the UUID.
    string id = 1;

    // Unique identifier for the Model to which attribute belongs. Text representation of the UUID.
    string model_id = 2;

    // The description of the attribute.
    string description = 3;

    // Unique identifier of the attribute type.
    AttributeType attribute_type = 4;

    // The name of the attribute.
    string name = 5;

    // The creation time of the attribute.
    google.protobuf.Timestamp create_time = 6;

    // The timestamp of the last attribute's update.
    google.protobuf.Timestamp update_time = 7;
}

// Representation of attribute type.
message AttributeType {
    // Mandatory field. Unique identifier of the attribute type. UUID in the string form.
    string id = 1;

    // A short hint about how the type is used or what it's intended for.
    string description = 2;

    // Mandatory field. A short, meaningful title of the attribute type.
    string name = 3;

    // Mandatory field. Unique web identifier of the attribute type.
    string slug = 4;

    // Mandatory field. The time the attribute type was created.
    google.protobuf.Timestamp create_time = 5;

    // Mandatory field. The last time that the attribute type was changed.
    google.protobuf.Timestamp update_time = 6;
}

// Model with attributes and associations.
message ModelOverview {
    // Model
    Model model = 1;

    // Model's associations.
    repeated Association associations = 2;

    // Model's attributes.
    repeated Attribute attributes = 3;
}

// Request to create the Model.
message CreateModelRequest {
    // Projects ID. UUID in a string form.
    string project_id = 1;

    // The description of the Model.
    string description = 2;

    // The name of the Model.
    string name = 3;

    // The slug of the Model. Unique identifier for the Model's web address.
    string slug = 4;
}

// Request definition for Project Model finding.
message FindProjectModelRequest {
    // Project's unique web identifier.
    string project_slug = 1;

    // Models's unique web identifier associated with the Model.
    string model_slug = 2;
}

// Request definition for Project Model overview finding.
message FindProjectModelOverviewRequest {
    // Project's unique web identifier.
    string project_slug = 1;

    // Models's unique web identifier associated with the Model.
    string model_slug = 2;
}

// Request definition for Project Model overviews.
message ListProjectModelOverviewsRequest {
    // Project's unique web identifier.
    string project_slug = 1;
}

// Response definition for Project Model overview listing.
message ListProjectModelOverviewsResponse {
    // List of Project's models with all their attributes and associations.
    repeated ModelOverview model_overviews = 1;
}

// Request definition for Project Models listing.
message ListProjectModelsRequest {
    // Project's unique web identifier associated with Models.
    string project_slug = 1;
}

// Response definition for Project Models listing.
message ListProjectModelsResponse {
    // List of Models associated with the give Project slug.
    repeated Model models = 1;
}

// Request definition for Model deletion.
message DeleteModelRequest {
    // Unique Model identifier. UUID in a string form.
    string id = 1;
}

// Request definition for Model attribute creation.
message CreateAttributeRequest {
    // Model id. UUID in a string form.
    string model_id = 1;

    // The description of the Model's attribute.
    string description = 2;

    // Type of the Model's attribute;
    string attribute_type_id = 3;

    // The name of the Model's attribute.
    string name = 4;
}

// Request definition for Model association creation.
message CreateAssociationRequest {
    // Model id. UUID in a string form.
    string model_id = 1;

    // Associated model id. UUID in a string form.
    string associated_model_id = 2;

    // The description of the Model's association.
    string description = 3;

    // Kind of the Model's association;
    AssociationKind kind = 4;

    // The name of the Model's association.
    string name = 5;
}


// Request definition for Model attribute finding.
message FindProjectModelAttributeRequest {
    // Project unique web identifier.
    string project_slug = 1;

    // Model unique web identifier.
    string model_slug = 2;

    // Attribute's name.
    string attribute_name = 3;
}

// Request definition for Model association finding.
message FindProjectModelAssociationRequest {
    // Project unique web identifier.
    string project_slug = 1;

    // Model unique web identifier.
    string model_slug = 2;

    // Association's name.
    string association_name = 3;
}


// Request definition for Model attributes listing.
message ListProjectModelAttributesRequest {
    // Project unique web identifier.
    string project_slug = 1;

    // Model unique web identifier.
    string model_slug = 2;
}

// Request definition for Model associations listing.
message ListProjectModelAssociationsRequest {
    // Project unique web identifier.
    string project_slug = 1;

    // Model unique web identifier.
    string model_slug = 2;
}

// Response definition for Model attributes listing.
message ListProjectModelAttributesResponse {
    // List of Model's attributes.
    repeated Attribute attributes = 1;
}

// Response definition for Model associations listing.
message ListProjectModelAssociationsResponse {
    // List of Model's associations.
    repeated Association associations = 1;
}

// Request definition for Model attribute deletion.
message DeleteAttributeRequest {
    // Unique attribute identifier. UUID in a string form.
    string id = 1;
}

// Request definition for Model association deletion.
message DeleteAssociationRequest {
    // Unique association identifier. UUID in a string form.
    string id = 1;
}

// All possible kinds of Model associations.
enum AssociationKind {
    // Unspecified
    ASSOCIATION_KIND_UNSPECIFIED = 0;

    // Belongs to
    ASSOCIATION_KIND_BELONGS_TO = 1;

    // Has one
    ASSOCIATION_KIND_HAS_ONE = 2;

    // Has many
    ASSOCIATION_KIND_HAS_MANY = 3;
}
