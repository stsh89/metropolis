syntax = "proto3";

import "proto/gymnasium/v1/dimensions/project.proto";
import "proto/gymnasium/v1/dimensions/model.proto";

package proto.gymnasium.v1;

service Dimensions {
    rpc ListProjectRecords(ListProjectRecordsRequest) returns (ListProjectRecordsResponse);
    rpc GetProjectRecord(GetProjectRecordRequest) returns (GetProjectRecordResponse);
    rpc CreateProjectRecord(CreateProjectRecordRequest) returns (CreateProjectRecordResponse);
    rpc ArchiveProjectRecord(ArchiveProjectRecordRequest) returns (ArchiveProjectRecordResponse);
    rpc RestoreProjectRecord(RestoreProjectRecordRequest) returns (RestoreProjectRecordResponse);
    rpc DeleteProjectRecord(DeleteProjectRecordRequest) returns (DeleteProjectRecordResponse);
    rpc RenameProjectRecord(RenameProjectRecordRequest) returns (RenameProjectRecordResponse);

    rpc ListModelRecords(ListModelRecordsRequest) returns (ListModelRecordsResponse);
    rpc CreateModelRecord(CreateModelRecordRequest) returns (CreateModelRecordResponse);
    rpc GetModelRecord(GetModelRecordRequest) returns (GetModelRecordResponse);
    rpc DeleteModelRecord(DeleteModelRecordRequest) returns (DeleteModelRecordResponse);

    rpc CreateModelAttributeRecord(CreateModelAttributeRecordRequest) returns (CreateModelAttributeRecordResponse);
    rpc GetModelAttributeRecord(GetModelAttributeRecordRequest) returns (GetModelAttributeRecordResponse);
    rpc DeleteModelAttributeRecord(DeleteModelAttributeRecordRequest) returns (DeleteModelAttributeRecordResponse);

    rpc CreateModelAssociationRecord(CreateModelAssociationRecordRequest) returns (CreateModelAssociationRecordResponse);
    rpc GetModelAssociationRecord(GetModelAssociationRecordRequest) returns (GetModelAssociationRecordResponse);
    rpc DeleteModelAssociationRecord(DeleteModelAssociationRecordRequest) returns (DeleteModelAssociationRecordResponse);
}

service HealthCheck {
    rpc GetHealthCheck(GetHealthCheckRequest) returns (GetHealthCheckResponse);
}

message GetHealthCheckRequest {}

enum HealthCheckStatus {
    HealthCheckStatusUnspecified = 0;
    HealthCheckStatusHealthy = 1;
    HealthCheckStatusUnhealthy = 2;
}

message GetHealthCheckResponse {
    HealthCheckStatus status = 1;
}

message ListProjectRecordsRequest{
    bool archived = 1;
}

message ListProjectRecordsResponse{
    repeated dimensions.Project project_records = 1;
}

message GetProjectRecordRequest {
    string slug = 1;
}

message GetProjectRecordResponse {
    dimensions.Project project_record = 1;
}

message CreateProjectRecordRequest {
    // The description of the Project.
    string description = 1;

    // The name of the Project.
    string name = 2;

    // The slug of the Project. Unique identifier for the Project's web address.
    string slug = 3;
}

message CreateProjectRecordResponse {
    dimensions.Project project_record = 1;
}

message ArchiveProjectRecordRequest {
    string id = 1;
}

message ArchiveProjectRecordResponse {
    dimensions.Project project_record = 1;
}

message RestoreProjectRecordRequest {
    string id = 1;
}

message RestoreProjectRecordResponse {
    dimensions.Project project_record = 1;
}

message DeleteProjectRecordRequest {
    string id = 1;
}

message DeleteProjectRecordResponse {}

message RenameProjectRecordRequest {
    string id = 1;

    // The new name of the Project.
    string name = 2;

    // The slug of the Project. Unique identifier for the Project's web address.
    string slug = 3;
}

message RenameProjectRecordResponse {
    dimensions.Project project_record = 1;
}

message ListModelRecordsRequest{
    string project_slug = 1;
}

message ListModelRecordsResponse{
    repeated dimensions.Model model_records = 1;
}

message CreateModelRecordRequest {
    string project_id = 1;

    // The description of the Model.
    string description = 2;

    // The name of the Model.
    string name = 3;

    // The slug of the Model. Unique identifier for the Model's web address.
    string slug = 4;
}

message CreateModelRecordResponse {
    dimensions.Model model_record = 1;
}

message GetModelRecordRequest {
    string project_slug = 1;
    string model_slug = 2;
    bool preload_attributes = 3;
    bool preload_associations = 4;
}

message GetModelRecordResponse {
    dimensions.Model model_record = 1;
    repeated dimensions.ModelAssociation model_association_records = 2;
    repeated dimensions.ModelAttribute model_attribute_records = 3;
}

message DeleteModelRecordRequest {
    string id = 1;
}

message DeleteModelRecordResponse {}

message CreateModelAttributeRecordRequest {
    string model_id = 1;

    // The description of the ModelAttribute.
    string description = 2;

    dimensions.ModelAttributeKind kind = 3;

    // The name of the ModelAttribute.
    string name = 4;
}

message CreateModelAttributeRecordResponse {
    dimensions.ModelAttribute model_attribute_record = 1;
}

message GetModelAttributeRecordRequest {
    string project_slug = 1;
    string model_slug = 2;
    string attribute_name = 3;
}

message GetModelAttributeRecordResponse {
    dimensions.ModelAttribute model_attribute_record = 1;
}

message DeleteModelAttributeRecordRequest {
    string id = 1;
}

message DeleteModelAttributeRecordResponse {}

message CreateModelAssociationRecordRequest {
    string model_id = 1;

    string associated_model_id = 2;

    // The description of the ModelAssociation.
    string description = 3;

    dimensions.ModelAssociationKind kind = 4;

    // The name of the ModelAssociation.
    string name = 5;
}

message CreateModelAssociationRecordResponse {
    dimensions.ModelAssociation model_association_record = 1;
}

message GetModelAssociationRecordRequest {
    string project_slug = 1;
    string model_slug = 2;
    string association_name = 3;
}

message GetModelAssociationRecordResponse {
    dimensions.ModelAssociation model_association_record = 1;
}

message DeleteModelAssociationRecordRequest {
    string id = 1;
}

message DeleteModelAssociationRecordResponse {}
